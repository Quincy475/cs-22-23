// <auto-generated />
using System;
using CS_Eind.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CS_Eind.Migrations
{
    [DbContext(typeof(AirBNBDbContext))]
    partial class AirBNBDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CS_Eind.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            Email = "bob.jones@example.com",
                            FirstName = "Bob",
                            LastName = "Jones"
                        },
                        new
                        {
                            Id = 3,
                            Email = "alice.Wonder@example.com",
                            FirstName = "Alice",
                            LastName = "InWonderLand"
                        },
                        new
                        {
                            Id = 4,
                            Email = "bob.Smiles@example.com",
                            FirstName = "Tim",
                            LastName = "Smiles"
                        });
                });

            modelBuilder.Entity("CS_Eind.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsCover")
                        .HasColumnType("bit");

                    b.Property<int?>("LandlordId")
                        .HasColumnType("int");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.HasIndex("LocationId");

                    b.ToTable("Image");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCover = true,
                            LocationId = 1,
                            Url = "http://cdn.home-designing.com/wp-content/uploads/2010/11/Gingerbread-cottage-house-beautiful-landscape.jpg"
                        },
                        new
                        {
                            Id = 2,
                            IsCover = true,
                            LocationId = 2,
                            Url = "http://weknowyourdreams.com/images/penthouse/penthouse-01.jpg"
                        },
                        new
                        {
                            Id = 3,
                            IsCover = true,
                            LocationId = 3,
                            Url = "http://www.cottageblog.ca/wp-content/uploads/LakeJoeCabin-1280.jpg"
                        },
                        new
                        {
                            Id = 4,
                            IsCover = true,
                            LocationId = 4,
                            Url = "https://tse3.mm.bing.net/th?id=OIP.5Nd1LqWRLikaFVlmbw2RfQHaLG&pid=Api"
                        },
                        new
                        {
                            Id = 5,
                            IsCover = false,
                            LocationId = 2,
                            Url = "https://tse1.explicit.bing.net/th?id=OIP.tOrydk5j46G7kWuS1elhsgHaE8&pid=Api"
                        },
                        new
                        {
                            Id = 6,
                            IsCover = false,
                            LocationId = 3,
                            Url = "https://tse1.mm.bing.net/th?id=OIP.KXS2egJ9qayUAMdLc9cCYQHaFX&pid=Api"
                        },
                        new
                        {
                            Id = 7,
                            IsCover = false,
                            LocationId = 4,
                            Url = "https://tse1.mm.bing.net/th?id=OIP.PLvxFihIhkAe7oBQ_Ma-TwHaE7&pid=Api"
                        },
                        new
                        {
                            Id = 8,
                            IsCover = true,
                            LandlordId = 1,
                            Url = "https://tse4.mm.bing.net/th?id=OIP.iBoBzz9cJd-jmN7jBpM2HwHaKB&pid=Api"
                        },
                        new
                        {
                            Id = 9,
                            IsCover = true,
                            LandlordId = 2,
                            Url = "https://tse4.mm.bing.net/th?id=OIP.bkfMC2AL9D8fFqfyAmsTqAHaI7&pid=Api"
                        },
                        new
                        {
                            Id = 10,
                            IsCover = true,
                            LandlordId = 3,
                            Url = "https://tse4.mm.bing.net/th?id=OIP.q99MVI-6mP4jD1NpWGR8bAHaHa&pid=Api"
                        },
                        new
                        {
                            Id = 11,
                            IsCover = true,
                            LandlordId = 4,
                            Url = "https://tse4.mm.bing.net/th?id=OIP.MB0oW9c-Mr-w-wPv91_VsgHaLH&pid=Api"
                        });
                });

            modelBuilder.Entity("CS_Eind.Models.Landlord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Landlord");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 40,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            Age = 55,
                            FirstName = "Mister",
                            LastName = "Bean"
                        },
                        new
                        {
                            Id = 3,
                            Age = 40,
                            FirstName = "Johny",
                            LastName = "Test"
                        },
                        new
                        {
                            Id = 4,
                            Age = 35,
                            FirstName = "Mister",
                            LastName = "Mister"
                        });
                });

            modelBuilder.Entity("CS_Eind.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandlordId")
                        .HasColumnType("int");

                    b.Property<int>("LocationFeatures")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfGuests")
                        .HasColumnType("int");

                    b.Property<float>("PricePerDay")
                        .HasColumnType("real");

                    b.Property<int>("Rooms")
                        .HasColumnType("int");

                    b.Property<string>("SubTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandlordId");

                    b.ToTable("Location");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "De camping ligt verscholen achter de boerderij in de polder. Op fietsafstand (5 minuten) liggen het dorpje Nieuwvliet, de zee, het strand, het bos van Erasmus en het natuurgebied de Knokkert.",
                            LandlordId = 1,
                            LocationFeatures = 0,
                            NumberOfGuests = 12,
                            PricePerDay = 300f,
                            Rooms = 5,
                            SubTitle = "Lekker veel ruimte",
                            Title = "De Boerenhoeve",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Nee, dit puike penthouse dat al jaren te koop stond en nu is verkocht, is niet de duurste woning van ons land. Bij lange na niet. Wel is de meer dan €30.000 per vierkante meter woonruimte een record in ons land.",
                            LandlordId = 2,
                            LocationFeatures = 0,
                            NumberOfGuests = 4,
                            PricePerDay = 400f,
                            Rooms = 2,
                            SubTitle = "Te gek uitzicht",
                            Title = "Frankie's Penthouse",
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "A cozy cottage near the lake with beautiful view",
                            LandlordId = 4,
                            LocationFeatures = 38,
                            NumberOfGuests = 4,
                            PricePerDay = 100f,
                            Rooms = 2,
                            SubTitle = "Near the lake",
                            Title = "Cozy Cottage",
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Description = "A luxury apartment in the heart of the city",
                            LandlordId = 3,
                            LocationFeatures = 60,
                            NumberOfGuests = 6,
                            PricePerDay = 200f,
                            Rooms = 3,
                            SubTitle = "Downtown",
                            Title = "Luxury Apartment",
                            Type = 0
                        });
                });

            modelBuilder.Entity("CS_Eind.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LocationId");

                    b.ToTable("Reservation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2023, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            StartDate = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 6, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            StartDate = new DateTime(2023, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4,
                            StartDate = new DateTime(2023, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4,
                            StartDate = new DateTime(2023, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            CustomerId = 2,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            CustomerId = 3,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 9, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            StartDate = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            CustomerId = 4,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 3,
                            StartDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 4,
                            StartDate = new DateTime(2023, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2023, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2023, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            CustomerId = 1,
                            Discount = 0f,
                            EndDate = new DateTime(2024, 1, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 1,
                            StartDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            CustomerId = 2,
                            Discount = 0f,
                            EndDate = new DateTime(2024, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LocationId = 2,
                            StartDate = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CS_Eind.Models.Image", b =>
                {
                    b.HasOne("CS_Eind.Models.Landlord", "Landlord")
                        .WithMany("Avatars")
                        .HasForeignKey("LandlordId");

                    b.HasOne("CS_Eind.Models.Location", "Location")
                        .WithMany("Images")
                        .HasForeignKey("LocationId");

                    b.Navigation("Landlord");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("CS_Eind.Models.Location", b =>
                {
                    b.HasOne("CS_Eind.Models.Landlord", "Landlord")
                        .WithMany("Locations")
                        .HasForeignKey("LandlordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Landlord");
                });

            modelBuilder.Entity("CS_Eind.Models.Reservation", b =>
                {
                    b.HasOne("CS_Eind.Models.Customer", "Customer")
                        .WithMany("Reservations")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CS_Eind.Models.Location", "Location")
                        .WithMany("Reservations")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("CS_Eind.Models.Customer", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("CS_Eind.Models.Landlord", b =>
                {
                    b.Navigation("Avatars");

                    b.Navigation("Locations");
                });

            modelBuilder.Entity("CS_Eind.Models.Location", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
